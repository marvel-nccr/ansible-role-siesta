---
# see https://pelios.csx.cam.ac.uk/~mc321/siesta.html
- name: Install siesta dependencies
  become: true
  apt:
    name:
      - gfortran
      - openmpi-common
      - openmpi-bin
      - libopenmpi-dev
      - libblacs-mpi-dev
      - libnetcdf-dev
      - netcdf-bin
      - libnetcdff-dev
      - libscalapack-mpi-dev
      - libblas-dev
      - liblapack-dev

- name: Get siesta source
  get_url:
    url: "{{ siesta_url }}"
    dest: "{{ siesta_code_folder }}/{{ siesta_src_archive }}"
  register: siesta_download

- name: Extract siesta source
  unarchive:
    src: "{{ siesta_download.dest }}"
    dest: "{{ siesta_code_folder }}"
    remote_src: true

- name: create Makefile
  shell: ../Src/obj_setup.sh
  args:
    chdir: "{{ siesta_topdir }}/Obj"
    creates: "{{ siesta_topdir }}/Obj/Makefile"

- name: copy arch.make
  template:
    src: full_options.make
    dest: "{{ siesta_topdir }}/Obj/arch.make"

- name: Make siesta executables
  shell: "make"
  args:
    chdir: "{{ siesta_topdir }}/Obj"
    creates: "{{ siesta_topdir }}/Obj/siesta"
  register: siesta_make

- name: Make COOP/COHP utility
  shell: "make mprop"
  args:
    chdir: "{{ siesta_topdir }}/Util/COOP"
    creates: "{{ siesta_topdir }}/Util/COOP/mprop"
  register: mprop_make

- name: Make fat utility
  shell: "make fat"
  args:
    chdir: "{{ siesta_topdir }}/Util/COOP"
    creates: "{{ siesta_topdir }}/Util/COOP/fat"
  register: fat_make

- name: Make gnubands utility
  shell: "make gnubands"
  args:
    chdir: "{{ siesta_topdir }}/Util/Bands"
    creates: "{{ siesta_topdir }}/Util/Bands/gnubands"
  register: gnubands_make

- name: Make eigfat2plot utility
  shell: "make eigfat2plot"
  args:
    chdir: "{{ siesta_topdir }}/Util/Bands"
    creates: "{{ siesta_topdir }}/Util/Bands/eigfat2plot"
  register: eigfat2plot_make

- import_tasks: tests.yml
  when: siesta_make.changed and run_tests is defined and run_tests

- name: Install siesta executable
  become: true
  copy:
    src: "{{ siesta_topdir }}/Obj/siesta"
    dest: "{{ siesta_prefix }}/bin"
    remote_src: true
    mode: '0755'
  register: siesta_install

- name: Install mprop executable
  become: true
  copy:
    src: "{{ siesta_topdir }}/Util/COOP/mprop"
    dest: "{{ siesta_prefix }}/bin"
    remote_src: true
    mode: '0755'
  register: mprop_install

- name: Install fat executable
  become: true
  copy:
    src: "{{ siesta_topdir }}/Util/COOP/fat"
    dest: "{{ siesta_prefix }}/bin"
    remote_src: true
    mode: '0755'
  register: fat_install

- name: Install gnubands executable
  become: true
  copy:
    src: "{{ siesta_topdir }}/Util/Bands/gnubands"
    dest: "{{ siesta_prefix }}/bin"
    remote_src: true
    mode: '0755'
  register: gnubands_install

- name: Install eigfat2plot executable
  become: true
  copy:
    src: "{{ siesta_topdir }}/Util/Bands/eigfat2plot"
    dest: "{{ siesta_prefix }}/bin"
    remote_src: true
    mode: '0755'
  register: eigfat2plot_install

- include_role:
    name: release_notes
  vars:
    section: "siesta"
    option: "version"
    value: "{{ siesta_version }}"
  when: release_notes is defined and release_notes

- include_role:
    name: release_notes
  vars:
    section: "siesta"
    option: "usage"
    value: >-
      siesta is compiled and installed in {{ siesta_prefix }}.
      simply run 'siesta'
      Some utilites are also installed in {{ siesta_prefix }}:
         mprop
         fat
         gnubands
         eigfat2plot
  when: release_notes is defined and release_notes

# Process utilities
- include_tasks: siesta-utils.yml
  vars:
    prog: "{{ item }}"
  with_items: "{{ siesta_utils }}"
  tags: siesta_utilites
